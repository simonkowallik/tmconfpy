name: Release  
  
on:
  workflow_dispatch:
  release:
    types: [released]

jobs:
  release-python-package:
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/tmconfpy
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: poetry

      - name: Install dependencies
        run: poetry install --with dev

      - name: Build package
        run: poetry build

      #- name: Publish package
      #  env:
      #    POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      #  run: poetry publish

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1


  release-container-image:
    strategy:
      matrix:
        containers:
          - file: files/Dockerfile
            tags: |
              simonkowallik/irulescan:latest
              ghcr.io/simonkowallik/irulescan:latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          file: ${{ matrix.containers.file }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ matrix.containers.tags }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # docker... https://github.com/peter-evans/dockerhub-description/issues/10
          password: ${{ secrets.DOCKERHUB_PASSWORD }}