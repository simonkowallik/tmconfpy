[tool.poetry]
name = "tmconfpy"
version = "1.1.0"
description = "A Python library to serialize F5 BIG-IP configuration files to a python dict or JSON."
authors = ["Simon Kowallik <sk-github@simonkowallik.com>"]
readme = "README.md"

homepage = "https://github.com/simonkowallik/tmconfpy"
repository = "https://github.com/simonkowallik/tmconfpy"
documentation = "https://github.com/simonkowallik/tmconfpy"

keywords = [
    "F5",
    "DevOps",
    "Security",
]

classifiers = [
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: System",
    "Topic :: Security",
]

[tool.poetry.scripts]
tmconfpy = "tmconfpy.cli:cli"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = {version = "0.115.5", optional = true}
uvicorn = {version = "0.32.1", optional = true}
python-multipart = {version = "0.0.17", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
coverage = "^7.6.8"
ruff = "^0.8.0"
ipykernel = "^6.29.5"
fastapi = "^0.115.5"
mypy = "^1.13.0"
ansible-core = "^2.17.6"
bump-my-version = "^0.28.1"


[tool.poetry.extras]
apiserver = ["fastapi", "uvicorn", "python-multipart"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bumpversion]
current_version = "1.1.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[[tool.bumpversion.files]]
filename = "tmconfpy/__init__.py"

[[tool.bumpversion.files]]
filename = "ansible_collections/simonkowallik/tmconfpy/galaxy.yml"

